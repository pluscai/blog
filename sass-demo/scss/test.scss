/**
变量
计算功能
嵌套
注释
代码重用
	继承
	Mixin
	颜色函数
	插入文件

高级用法
	条件语句
	循环语句
	自定义函数
 */
div {
  color: #ccc;
}

/**
变量
 */
$blue: #1875e7;
div {
  color: $blue;
}


$side: left;
.rounded {
  border-#{$side}-radius: 5px;
}

$var: 1;
body {
  margin: (14px/2);
  top: 50px + 100px;
  right: $var * 10%;
}

/**
选择器嵌套
 */
div {
  h1 {
	color: red;
  }
}

/**
属性嵌套
 */
p {
  border: {
	color: red;
  }
}

/**
嵌套代码内，可使用&引用父元素
 */
a {
  &:hover {
	color: #fff
  }
}

/*comment1*/
// comment2
/*!
  comment3
 */

.class1 {
  border: 1px solid #ddd;
}

.class2 {
  @extend .class1;
  font-size: 120%;
}

/*mixin定义一个代码块*/
@mixin left {
  float: left;
  margin-left: 10px;
}

div {
  @include left;
}

/*mixin可以指定参数和缺省值,
  使用的时候可以根据需要加入参数*/
@mixin right($value: 10px) {
  float: right;
  margin-left: $value;
}

div {
  @include right;
}

div2 {
  @include right(20px);
}

/*用mixin生成浏览器前缀*/
@mixin rounded($vert, $horz, $radius: 10px) {
  　　　　border-#{$vert}-#{$horz}-radius: $radius;
  　　　　-moz-border-radius-#{$vert}#{$horz}: $radius;
  　　　　-webkit-border-#{$vert}-#{$horz}-radius: $radius;
}

#navbar li {
  @include rounded(top, left);
}

#footer {
  @include rounded(top, left, 5px);
}

div {
  color: darken(#cc3, 10%);
}


/*条件语句*/
p {
  @if 1 + 1 == 2 {
	border: 1px solid;
  } @else {
	border: 2px dotted;
  }
}

/*循环语句*/
@for $i from 1 to 5 {
  　.border-#{$i} {
	border: #{$i}px solid blue;
  }
}

$a: 6;
@while $a > 0 {
  .item-#{$a} {
	width: 2em * $a;
  }
  $a: $a - 2;
}

@each $member in a, b, c, d {
  .#{$member} {
	background-image: url("/image/#{$member}.jpg");
  }
}


/*自定义函数*/
@function double($base) {
  @return $base * 3;
}
.sidebar {
  margin-right: double(5px);
}


